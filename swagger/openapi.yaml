openapi: 3.0.1
info:
  title: GRANATUM 2 | API
  description: ''
  contact:
    name: GRANATUM SOLUTIONS
    url: https://granatum.solutions
    email: info@granatum.solutions
  version: 2.26.0
servers:
  - url: https://api.granatum.solutions
paths:
  /api/users:
    post:
      tags:
        - API
      summary: Создать пользователя
      operationId: createUser
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserIdResponse'
    delete:
      tags:
        - API
      summary: Очистить данные пользователей
      operationId: clearUsersData
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
        - name: sessionId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK

  /api/spaces/{spaceID}:
    get:
      tags:
        - API
      summary: Получить пространство
      operationId: getSpace
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
        - name: spaceID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Space'

  /api/folders/{folderID}:
    get:
      tags:
        - API
      summary: Получить папку по ID
      operationId: getFolder
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
        - name: folderID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Folder'
    delete:
      tags:
        - API
      summary: Удалить папку
      operationId: deleteFolder
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
        - name: folderID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/folders:
    post:
      tags:
        - API
      summary: Создать папку
      operationId: createFolder
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFolderCommand'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Folder'
    patch:
      tags:
        - API
      summary: Редактировать папку
      operationId: editFolder
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFolderCommand'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Folder'

  /api/folders/{folderID}/sessions:
    get:
      tags:
        - API
      summary: Получить все сессии папки
      operationId: getSessions
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
        - name: folderID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Session'

  /api/sessions/{sessionID}:
    get:
      tags:
        - API
      summary: Получить сессию по ID
      operationId: getSession_1
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
        - name: sessionID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Session'
    delete:
      tags:
        - API
      summary: Удалить сессию
      operationId: deleteSession_1
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
        - name: sessionID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/sessions:
    put:
      tags:
        - API
      summary: Создать сессию по образу и подобию
      operationId: createSessionFromTemplate
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
        - name: templateID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Session'
    post:
      tags:
        - API
      summary: Создать сессию
      operationId: createSession
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionCommand'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Session'
    patch:
      tags:
        - API
      summary: Редактировать сессию
      operationId: createSession_1
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSessionCommand'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Session'

  /api/folders/{folderID}/recordings:
    get:
      tags:
        - API
      summary: Получить все записи сессий папки
      operationId: getRecordings
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
        - name: folderID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recording'
  /api/recordings/{recordingID}:
    get:
      tags:
        - API
      summary: Скачать запись сессии
      operationId: downloadRecording
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
        - name: recordingID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
  /api/sessions/{recordingID}:
    delete:
      tags:
        - API
      summary: Удалить запись сессии
      operationId: deleteRecording
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
        - name: recordingID
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
  /api/resources:
    post:
      tags:
        - API
      summary: Загрузить ресурс
      operationId: uploadResource
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
  /api/webhooks/sessionended:
    post:
      tags:
        - API
      summary: Зарегестрировать вебхук по завершению сессии
      operationId: registerSessionEndedWebhook
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterWebhookCommand'
      responses:
        '200':
          description: OK
  /api/webhooks/recordingready:
    post:
      tags:
        - API
      summary: Зарегестрировать вебхук по завершению процесса записи
      operationId: registerRecordingReadyWebhook
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterWebhookCommand'
      responses:
        '200':
          description: OK
  /api/sessions/{sessionId}/stats:
    get:
      tags:
        - API
      summary: Получить статистику посещений сессии
      operationId: getSessionStats
      parameters:
        - name: CLIENT_KEY
          in: header
          required: true
          schema:
            type: string
        - name: sessionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserActivity'
components:
  schemas:
    UserIdResponse:
      type: object
      properties:
        id:
          type: string
          description: id пользователя
    Space:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        logo:
          type: string
        open:
          type: boolean
          description: "Если true, то пользователи могут заходить в сессии без авторизации, введя имя."
        limitActiveUsers:
          type: integer
          format: int32
          description: "Ограничение по активным пользователям (в месяц)."
        overlimit:
          type: boolean
          description: "True если превышено ограничение в текущем период."
        enableTurn:
          type: boolean
          description: "Если true, то у всех пользователей все медиа потоки автоматически будут проходить через TURN-сервер"
        folders:
          type: array
          items:
            type: object
            properties:
              folderId:
                type: string
              name:
                type: string
              hidden:
                type: boolean
                description: "True если папка скрытая (доступна только админам)"
          description: "Список папок на root уровне"
    Folder:
      type: object
      properties:
        id:
          type: string
        spaceId:
          type: string
        name:
          type: string
        path:
          type: string
        coverImage:
          type: string
          description: "URL изображения обложки"
        description:
          type: string
          description: "Описание папки"
        hidden:
          type: boolean
          description: "True если папка скрытая (доступна только админам)"
        folders:
          type: array
          items:
            type: object
            properties:
              folderId:
                type: string
              name:
                type: string
              hidden:
                type: boolean
                description: "True если папка скрытая (доступна только админам)"
          description: "Список дочерних папок"
        sessions:
          type: array
          items:
            $ref: '#/components/schemas/Session'
          description: "Список сессий в папке"
    Session:
      type: object
      properties:
        id:
          type: string
        folderId:
          type: string
        spaceId:
          type: string
        name:
          type: string
        description:
          type: string
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        closeAfterEnd:
          type: boolean
          description: "Закрывать доступ к сессии после endDate/completedAt"
        orderIndex:
          type: integer
          format: int64
          description: "Индекс внутри папки"
        sessionType:
          type: string
          enum:
            - GROUP
            - INDIVIDUAL
          description: "Тип сессии: групповая или самостоятельная работа"
        disableEditUserContent:
          type: boolean
          description: "Если true, пользователи не могут редактировать стикеры"
        limitedAccess:
          type: boolean
          description: "Если true, сессия доступна только пользователям в списке limitedAccessUserIds"
        limitedAccessUserIds:
          type: array
          items:
            type: string
          description: "Если limitedAccess, то список ваших id пользователей, которым доступна сессия"
        emailNotificationOnSave:
          type: boolean
          description: "Присылать уведомление юзерам при изменении дат сессии"
        emailReminderEnabled:
          type: boolean
          description: "Присылать напоминание о начале сессии за emailReminderMinutesBeforeStart минут до начала сессии"
        emailReminderMinutesBeforeStart:
          type: integer
          format: int32
        manualStartAndFinish:
          type: boolean
          description: "Отображать кнопку начала/завершения сессии для админов (сессия не доступна пользователям до нажатия)"
        beganAt:
          type: string
          format: date-time
          description: "Если manualStartAndFinish true, то фактическое время начала сессии"
        completedAt:
          type: string
          format: date-time
          description: "Если manualStartAndFinish true, то фактическое время завершения сессии"
        autoDistribution:
          type: boolean
          description: "Автоматическое распределение пользователей по командам"
        authSource:
          type: string
          enum:
            - wt
            - edu
          description: "Идентификатор авторизации"
    Recording:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        startedAt:
          type: string
          format: date-time
        finishedAt:
          type: string
          format: date-time
        url:
          type: string
    UserActivity:
      type: object
      properties:
        userId:
          type: string
        joined:
          type: string
          format: date-time
        leaved:
          type: string
          format: date-time
    CreateFolderCommand:
      required:
        - name
        - folderId
      type: object
      properties:
        folderId:
          type: string
          description: "ID папки или пространства"
        name:
          maxLength: 100
          minLength: 1
          type: string
        coverImage:
          type: string
          description: "ID загруженого ресурса (полученого после загрузки по эндпойнту POST /api/resource)"
        description:
          maxLength: 200
          minLength: 0
          type: string
    UpdateFolderCommand:
      required:
        - folderId
      type: object
      properties:
        folderId:
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
        coverImage:
          type: string
          description: "ID загруженого ресурса (полученого после загрузки по эндпойнту POST /api/resource)"
        description:
          maxLength: 200
          minLength: 0
          type: string
          description: "Описание папки"
    CreateSessionCommand:
      required:
        - folderId
        - name
        - sessionType
      type: object
      properties:
        folderId:
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
        description:
          maxLength: 200
          minLength: 0
          type: string
        sessionType:
          type: string
          enum:
            - GROUP
            - INDIVIDUAL
        disableEditUserContent:
          type: boolean
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        emailNotificationOnSave:
          type: boolean
        emailReminderEnabled:
          type: boolean
        emailReminderMinutesBeforeStart:
          type: integer
          format: int32
        closeAfterEnd:
          type: boolean
        limitedAccess:
          type: boolean
        limitedAccessUserIds:
          uniqueItems: true
          type: array
          items:
            type: string
        authSource:
          type: string
          enum:
            - wt
            - edu
          description: "Идентификатор авторизации"
    UpdateSessionCommand:
      required:
        - sessionId
      type: object
      properties:
        sessionId:
          type: string
        name:
          maxLength: 100
          minLength: 1
          type: string
        sessionType:
          type: string
          enum:
            - GROUP
            - INDIVIDUAL
        description:
          maxLength: 200
          minLength: 0
          type: string
        disableEditUserContent:
          type: boolean
        startDate:
          type: string
          format: date-time
        endDate:
          type: string
          format: date-time
        autoDistribution:
          type: boolean
        emailNotificationOnSave:
          type: boolean
        emailReminderEnabled:
          type: boolean
        emailReminderMinutesBeforeStart:
          type: integer
          format: int32
        limitedAccess:
          type: boolean
        limitedAccessUserIds:
          uniqueItems: true
          type: array
          items:
            type: string
        closeAfterEnd:
          type: boolean
        authSource:
          type: string
          enum:
            - wt
            - edu
          description: "Идентификатор авторизации"
    RegisterWebhookCommand:
      required:
        - sessionId
      type: object
      properties:
        sessionId:
          type: string
        url:
          type: string
