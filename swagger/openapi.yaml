openapi: 3.0.0
info:
  description: '<a href="/">Вернуться на главную</a>'
  version: 1.0.0
  title: Granatum API
  contact:
    email: todo@granatum.solutions
servers:
  - url: https://api.granatum.solutions/integration
tags:
  - name: Авторизация
  - name: Статистика
paths:
  /registration:
    post:
      tags:
        - Авторизация
      summary: Создать новый аккаунт
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
      responses:
        201:
          description: Пользователь создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        400:
          description: Пользователь уже существует
  /account/{id}:
    patch:
      tags:
        - Авторизация
      summary: Изменить аккаунт
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        200:
          description: Пользователь изменен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /reset:
    post:
      tags:
        - Авторизация
      summary: Сбросить пароль
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
      responses:
        200:
          description: Пароль сброшен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetPasswordResponse'
  /users:
    get:
      tags:
        - Статистика
      summary: Получить список всех пользователей
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: '0'
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: '20'
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Page'
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
  /courses:
    get:
      tags:
        - Статистика
      summary: Получить список всех курсов
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: '0'
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: '20'
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Page'
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: '#/components/schemas/Course'
  /courses/{id}/users:
    get:
      tags:
        - Статистика
      summary: Получить список пользователей курса
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: '0'
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: '20'
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id курса
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Page'
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
    post:
      tags:
        - Доступ
      summary: Предоставить доступ к курсу
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id курса
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CourseAccessRequest'
      responses:
        200:
          description: OK
    delete:
      tags:
        - Доступ
      summary: Удалить пользователей из курса
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id курса
        - in: query
          name: id
          schema:
            type: array
            items:
              type: string
          required: true
          description: Id пользователя
        - in: query
          name: Роль
          schema:
            type: string
            default: USER
          required: false
          description: Роль
      responses:
        200:
          description: OK
  /courses/{id}/sessions:
    get:
      tags:
        - Статистика
      summary: Получить список сессий курса
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: '0'
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: '20'
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id курса
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Page'
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: '#/components/schemas/Session'
  /courses/{id}/progress:
    get:
      tags:
        - Статистика
      summary: Прогресс пользователей курса
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id курса
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: '0'
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: '20'
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Page'
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: '#/components/schemas/Progress'
  /sessions/{id}/users:
    get:
      tags:
        - Статистика
      summary: Получить список пользователей сессии
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: '0'
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: '20'
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id сессии
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Page'
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: '#/components/schemas/User'
  /sessions/{id}/results:
    get:
      tags:
        - Статистика
      summary: Результаты прохождения тестов в сессии
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: '0'
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: '20'
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Id сессии
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Page'
                  - type: object
                    properties:
                      content:
                        type: array
                        items:
                          $ref: '#/components/schemas/TestResult'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: token
  schemas:
    CreateUserResponse:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        password:
          type: string
    ResetPasswordRequest:
      type: object
      properties:
        id:
          type: string
    ResetPasswordResponse:
      type: object
      properties:
        id:
          type: string
        password:
          type: string
    CreateUserRequest:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        projectIds:
          type: array
          nullable: true
          items:
            type: string
        lang:
          type: string
          enum:
            - ru
            - he
            - en
        externalId:
          type: string
          description: Id пользователя во внешней системе
        additionalProperties:
          type: object
          description: Дополнительные поля (имя, фамилия, департамент и т.д.)
        coursePermissions:
          type: object
          properties:
            "{courseId}":
              type: string
              enum:
                - USER
                - COURSE_ADMIN
    UpdateUserRequest:
      type: object
      properties:
        name:
          type: string
          description: Имя
        projectIds:
          type: array
          nullable: true
          items:
            type: string
        externalId:
          type: string
          description: Id пользователя во внешней системе
        additionalProperties:
          type: object
          description: Дополнительные поля (имя, фамилия, департамент и т.д.)
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        name:
          type: string
        externalId:
          type: string
          description: Id пользователя во внешней системе
        active:
          type: boolean
        role:
          $ref: '#/components/schemas/Role'
        additionalProperties:
          type: object
          description: Дополнительные поля (имя, фамилия, департамент и т.д.)
        wasActive:
          type: boolean
    Role:
      type: string
      enum:
        - USER
        - ADMIN
        - COURSE_ADMIN
    Course:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
    Session:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        courseId:
          type: string
        startDate:
          type: string
          format: date-time
    TestResult:
      type: object
      properties:
        email:
          type: string
        attempts:
          type: number
        score:
          type: number
    Progress:
      type: object
      properties:
        email:
          type: string
        name:
          type: string
        sessions:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              averageScore:
                type: number
    CourseAccessRequest:
      type: object
      properties:
        accountIds:
          type: array
          items:
            type: string
        role:
          $ref: '#/components/schemas/Role'
    Page:
      type: object
      properties:
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/Sort'
        numberOfElements:
          type: integer
          format: int32
        last:
          type: boolean
        first:
          type: boolean
        pageable:
          $ref: '#/components/schemas/Pageable'
        empty:
          type: boolean
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    Sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean

security:
  - ApiKeyAuth: [ ]